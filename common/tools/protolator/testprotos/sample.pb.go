// Code generated by protoc-gen-go.
// source: sample.proto
// DO NOT EDIT!

/*
Package testprotos is a generated protocol buffer package.

It is generated from these files:
	sample.proto

It has these top-level messages:
	SimpleMsg
	NestedMsg
	StaticallyOpaqueMsg
*/
package testprotos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SimpleMsg is designed to test that all three types of message fields, plain, map,
// and slice are handled by the protolator tool
type SimpleMsg struct {
	PlainField string            `protobuf:"bytes,1,opt,name=plain_field,json=plainField" json:"plain_field,omitempty"`
	MapField   map[string]string `protobuf:"bytes,2,rep,name=map_field,json=mapField" json:"map_field,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SliceField []string          `protobuf:"bytes,3,rep,name=slice_field,json=sliceField" json:"slice_field,omitempty"`
}

func (m *SimpleMsg) Reset()                    { *m = SimpleMsg{} }
func (m *SimpleMsg) String() string            { return proto.CompactTextString(m) }
func (*SimpleMsg) ProtoMessage()               {}
func (*SimpleMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SimpleMsg) GetMapField() map[string]string {
	if m != nil {
		return m.MapField
	}
	return nil
}

// NestedMsg is designed to test the nested message component
type NestedMsg struct {
	PlainNestedField *SimpleMsg            `protobuf:"bytes,1,opt,name=plain_nested_field,json=plainNestedField" json:"plain_nested_field,omitempty"`
	MapNestedField   map[string]*SimpleMsg `protobuf:"bytes,2,rep,name=map_nested_field,json=mapNestedField" json:"map_nested_field,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SliceNestedField []*SimpleMsg          `protobuf:"bytes,3,rep,name=slice_nested_field,json=sliceNestedField" json:"slice_nested_field,omitempty"`
}

func (m *NestedMsg) Reset()                    { *m = NestedMsg{} }
func (m *NestedMsg) String() string            { return proto.CompactTextString(m) }
func (*NestedMsg) ProtoMessage()               {}
func (*NestedMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NestedMsg) GetPlainNestedField() *SimpleMsg {
	if m != nil {
		return m.PlainNestedField
	}
	return nil
}

func (m *NestedMsg) GetMapNestedField() map[string]*SimpleMsg {
	if m != nil {
		return m.MapNestedField
	}
	return nil
}

func (m *NestedMsg) GetSliceNestedField() []*SimpleMsg {
	if m != nil {
		return m.SliceNestedField
	}
	return nil
}

// StaticallyOpaqueMsg is designed to test the statically opaque message component
type StaticallyOpaqueMsg struct {
	PlainOpaqueField []byte            `protobuf:"bytes,1,opt,name=plain_opaque_field,json=plainOpaqueField,proto3" json:"plain_opaque_field,omitempty"`
	MapOpaqueField   map[string][]byte `protobuf:"bytes,2,rep,name=map_opaque_field,json=mapOpaqueField" json:"map_opaque_field,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SliceOpaqueField [][]byte          `protobuf:"bytes,3,rep,name=slice_opaque_field,json=sliceOpaqueField,proto3" json:"slice_opaque_field,omitempty"`
}

func (m *StaticallyOpaqueMsg) Reset()                    { *m = StaticallyOpaqueMsg{} }
func (m *StaticallyOpaqueMsg) String() string            { return proto.CompactTextString(m) }
func (*StaticallyOpaqueMsg) ProtoMessage()               {}
func (*StaticallyOpaqueMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StaticallyOpaqueMsg) GetMapOpaqueField() map[string][]byte {
	if m != nil {
		return m.MapOpaqueField
	}
	return nil
}

func init() {
	proto.RegisterType((*SimpleMsg)(nil), "testprotos.SimpleMsg")
	proto.RegisterType((*NestedMsg)(nil), "testprotos.NestedMsg")
	proto.RegisterType((*StaticallyOpaqueMsg)(nil), "testprotos.StaticallyOpaqueMsg")
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x49, 0x82, 0x62, 0xa6, 0x51, 0x4a, 0xaa, 0x50, 0x7a, 0xb1, 0xd4, 0x4b, 0xc5, 0x92,
	0x40, 0x7b, 0x11, 0xbd, 0xd4, 0x8a, 0xde, 0xaa, 0xd0, 0x5e, 0x44, 0x10, 0xd9, 0xa6, 0xdb, 0x36,
	0xb8, 0xc9, 0xc6, 0x64, 0x2b, 0xe4, 0x39, 0x7c, 0x25, 0x8f, 0x3e, 0x94, 0xec, 0x6c, 0xda, 0x6e,
	0xb4, 0xc5, 0x53, 0xb2, 0xb3, 0x33, 0xff, 0x3f, 0xff, 0xc7, 0x82, 0x93, 0x91, 0x28, 0x61, 0xd4,
	0x4b, 0x52, 0x2e, 0xb8, 0x0b, 0x82, 0x66, 0x02, 0x7f, 0xb3, 0xd6, 0xb7, 0x01, 0xf6, 0x38, 0x94,
	0x97, 0xc3, 0x6c, 0xee, 0x9e, 0x42, 0x25, 0x61, 0x24, 0x8c, 0x5f, 0x67, 0x21, 0x65, 0xd3, 0xba,
	0xd1, 0x34, 0xda, 0xf6, 0x08, 0xb0, 0x74, 0x2f, 0x2b, 0x6e, 0x1f, 0xec, 0x88, 0x24, 0xc5, 0xb5,
	0xd9, 0xb4, 0xda, 0x95, 0xee, 0x99, 0xb7, 0x91, 0xf3, 0xd6, 0x52, 0xde, 0x90, 0x24, 0x38, 0x72,
	0x17, 0x8b, 0x34, 0x1f, 0x1d, 0x44, 0xc5, 0x51, 0x5a, 0x64, 0x2c, 0x0c, 0x68, 0xa1, 0x61, 0x35,
	0x2d, 0x69, 0x81, 0x25, 0x6c, 0x68, 0x5c, 0xc3, 0x61, 0x69, 0xd6, 0xad, 0x82, 0xf5, 0x46, 0xf3,
	0x62, 0x19, 0xf9, 0xeb, 0x1e, 0xc3, 0xde, 0x07, 0x61, 0x4b, 0x5a, 0x37, 0xb1, 0xa6, 0x0e, 0x57,
	0xe6, 0xa5, 0xd1, 0xfa, 0x32, 0xc1, 0x7e, 0xa0, 0x99, 0xa0, 0x53, 0x19, 0xe7, 0x16, 0x5c, 0x15,
	0x27, 0xc6, 0x92, 0x96, 0xaa, 0xd2, 0x3d, 0xd9, 0xba, 0xf6, 0xa8, 0x8a, 0x03, 0x4a, 0x42, 0x2d,
	0x3c, 0x86, 0xaa, 0x8c, 0x5c, 0x92, 0x50, 0xc9, 0xcf, 0x75, 0x89, 0xb5, 0xab, 0x4c, 0xae, 0xcd,
	0xab, 0xfc, 0x47, 0x51, 0xa9, 0x28, 0x37, 0x53, 0x14, 0x4a, 0xb2, 0x16, 0xca, 0xee, 0xda, 0x0c,
	0x07, 0x34, 0x91, 0xc6, 0x13, 0xd4, 0xb6, 0x78, 0x6d, 0xe1, 0x75, 0xa1, 0xf3, 0xda, 0x69, 0xa0,
	0x61, 0xfc, 0x34, 0xa1, 0x36, 0x16, 0x44, 0x84, 0x01, 0x61, 0x2c, 0x7f, 0x4c, 0xc8, 0xfb, 0x12,
	0xdf, 0x47, 0x67, 0x05, 0x94, 0x63, 0x49, 0x03, 0xea, 0x14, 0xe4, 0x54, 0xaf, 0x0a, 0xf9, 0xa2,
	0xc8, 0x95, 0x7a, 0x15, 0xb9, 0x5e, 0x69, 0x83, 0xbf, 0x46, 0x92, 0xa1, 0xa6, 0xb4, 0x61, 0xa8,
	0xcb, 0x77, 0x56, 0x0c, 0x4b, 0x06, 0x92, 0xa1, 0x53, 0xc0, 0xd2, 0xba, 0x1b, 0x37, 0x08, 0xeb,
	0xb7, 0xe8, 0x7f, 0x8f, 0xcb, 0xd1, 0xa8, 0x0c, 0x06, 0xcf, 0xfd, 0x79, 0x28, 0x16, 0xcb, 0x89,
	0x17, 0xf0, 0xc8, 0x5f, 0xe4, 0x09, 0x4d, 0x19, 0x9d, 0xce, 0x69, 0xea, 0xcf, 0xc8, 0x24, 0x0d,
	0x03, 0x3f, 0xe0, 0x51, 0xc4, 0x63, 0x5f, 0x70, 0xce, 0x32, 0x1f, 0xd3, 0x31, 0x22, 0x78, 0xea,
	0x6f, 0xc2, 0x4e, 0xf6, 0xf1, 0xdb, 0xfb, 0x09, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x8e, 0x27, 0xdf,
	0x92, 0x03, 0x00, 0x00,
}
