// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	GossipMessage
	ConnEstablish
	DataRequest
	GossipHello
	DataUpdate
	DataDigest
	DataMessage
	Payload
	AckMessage
	AliveMessage
	PeerTime
	MembershipRequest
	MembershipResponse
	Member
	RemoteStateRequest
	RemoteStateResponse
	Empty
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type DataMessage_Type int32

const (
	DataMessage_UNDEFINED DataMessage_Type = 0
	DataMessage_BLOCK     DataMessage_Type = 1
	DataMessage_VAL_REQ   DataMessage_Type = 2
	DataMessage_VAL_RES   DataMessage_Type = 3
	DataMessage_CERT      DataMessage_Type = 4
)

var DataMessage_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "BLOCK",
	2: "VAL_REQ",
	3: "VAL_RES",
	4: "CERT",
}
var DataMessage_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"BLOCK":     1,
	"VAL_REQ":   2,
	"VAL_RES":   3,
	"CERT":      4,
}

func (x DataMessage_Type) String() string {
	return proto1.EnumName(DataMessage_Type_name, int32(x))
}
func (DataMessage_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type GossipMessage struct {
	Nonce uint64 `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*GossipMessage_AliveMsg
	//	*GossipMessage_MemReq
	//	*GossipMessage_MemRes
	//	*GossipMessage_DataMsg
	//	*GossipMessage_Hello
	//	*GossipMessage_DataDig
	//	*GossipMessage_DataReq
	//	*GossipMessage_DataUpdate
	//	*GossipMessage_AckMsg
	//	*GossipMessage_Empty
	//	*GossipMessage_Conn
	//	*GossipMessage_StateRequest
	//	*GossipMessage_StateResponse
	Content isGossipMessage_Content `protobuf_oneof:"content"`
}

func (m *GossipMessage) Reset()                    { *m = GossipMessage{} }
func (m *GossipMessage) String() string            { return proto1.CompactTextString(m) }
func (*GossipMessage) ProtoMessage()               {}
func (*GossipMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isGossipMessage_Content interface {
	isGossipMessage_Content()
}

type GossipMessage_AliveMsg struct {
	AliveMsg *AliveMessage `protobuf:"bytes,2,opt,name=aliveMsg,oneof"`
}
type GossipMessage_MemReq struct {
	MemReq *MembershipRequest `protobuf:"bytes,3,opt,name=memReq,oneof"`
}
type GossipMessage_MemRes struct {
	MemRes *MembershipResponse `protobuf:"bytes,4,opt,name=memRes,oneof"`
}
type GossipMessage_DataMsg struct {
	DataMsg *DataMessage `protobuf:"bytes,5,opt,name=dataMsg,oneof"`
}
type GossipMessage_Hello struct {
	Hello *GossipHello `protobuf:"bytes,6,opt,name=hello,oneof"`
}
type GossipMessage_DataDig struct {
	DataDig *DataDigest `protobuf:"bytes,7,opt,name=dataDig,oneof"`
}
type GossipMessage_DataReq struct {
	DataReq *DataRequest `protobuf:"bytes,8,opt,name=dataReq,oneof"`
}
type GossipMessage_DataUpdate struct {
	DataUpdate *DataUpdate `protobuf:"bytes,9,opt,name=dataUpdate,oneof"`
}
type GossipMessage_AckMsg struct {
	AckMsg *AckMessage `protobuf:"bytes,10,opt,name=ackMsg,oneof"`
}
type GossipMessage_Empty struct {
	Empty *Empty `protobuf:"bytes,11,opt,name=empty,oneof"`
}
type GossipMessage_Conn struct {
	Conn *ConnEstablish `protobuf:"bytes,12,opt,name=conn,oneof"`
}
type GossipMessage_StateRequest struct {
	StateRequest *RemoteStateRequest `protobuf:"bytes,14,opt,name=stateRequest,oneof"`
}
type GossipMessage_StateResponse struct {
	StateResponse *RemoteStateResponse `protobuf:"bytes,15,opt,name=stateResponse,oneof"`
}

func (*GossipMessage_AliveMsg) isGossipMessage_Content()      {}
func (*GossipMessage_MemReq) isGossipMessage_Content()        {}
func (*GossipMessage_MemRes) isGossipMessage_Content()        {}
func (*GossipMessage_DataMsg) isGossipMessage_Content()       {}
func (*GossipMessage_Hello) isGossipMessage_Content()         {}
func (*GossipMessage_DataDig) isGossipMessage_Content()       {}
func (*GossipMessage_DataReq) isGossipMessage_Content()       {}
func (*GossipMessage_DataUpdate) isGossipMessage_Content()    {}
func (*GossipMessage_AckMsg) isGossipMessage_Content()        {}
func (*GossipMessage_Empty) isGossipMessage_Content()         {}
func (*GossipMessage_Conn) isGossipMessage_Content()          {}
func (*GossipMessage_StateRequest) isGossipMessage_Content()  {}
func (*GossipMessage_StateResponse) isGossipMessage_Content() {}

func (m *GossipMessage) GetContent() isGossipMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GossipMessage) GetAliveMsg() *AliveMessage {
	if x, ok := m.GetContent().(*GossipMessage_AliveMsg); ok {
		return x.AliveMsg
	}
	return nil
}

func (m *GossipMessage) GetMemReq() *MembershipRequest {
	if x, ok := m.GetContent().(*GossipMessage_MemReq); ok {
		return x.MemReq
	}
	return nil
}

func (m *GossipMessage) GetMemRes() *MembershipResponse {
	if x, ok := m.GetContent().(*GossipMessage_MemRes); ok {
		return x.MemRes
	}
	return nil
}

func (m *GossipMessage) GetDataMsg() *DataMessage {
	if x, ok := m.GetContent().(*GossipMessage_DataMsg); ok {
		return x.DataMsg
	}
	return nil
}

func (m *GossipMessage) GetHello() *GossipHello {
	if x, ok := m.GetContent().(*GossipMessage_Hello); ok {
		return x.Hello
	}
	return nil
}

func (m *GossipMessage) GetDataDig() *DataDigest {
	if x, ok := m.GetContent().(*GossipMessage_DataDig); ok {
		return x.DataDig
	}
	return nil
}

func (m *GossipMessage) GetDataReq() *DataRequest {
	if x, ok := m.GetContent().(*GossipMessage_DataReq); ok {
		return x.DataReq
	}
	return nil
}

func (m *GossipMessage) GetDataUpdate() *DataUpdate {
	if x, ok := m.GetContent().(*GossipMessage_DataUpdate); ok {
		return x.DataUpdate
	}
	return nil
}

func (m *GossipMessage) GetAckMsg() *AckMessage {
	if x, ok := m.GetContent().(*GossipMessage_AckMsg); ok {
		return x.AckMsg
	}
	return nil
}

func (m *GossipMessage) GetEmpty() *Empty {
	if x, ok := m.GetContent().(*GossipMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

func (m *GossipMessage) GetConn() *ConnEstablish {
	if x, ok := m.GetContent().(*GossipMessage_Conn); ok {
		return x.Conn
	}
	return nil
}

func (m *GossipMessage) GetStateRequest() *RemoteStateRequest {
	if x, ok := m.GetContent().(*GossipMessage_StateRequest); ok {
		return x.StateRequest
	}
	return nil
}

func (m *GossipMessage) GetStateResponse() *RemoteStateResponse {
	if x, ok := m.GetContent().(*GossipMessage_StateResponse); ok {
		return x.StateResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GossipMessage) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _GossipMessage_OneofMarshaler, _GossipMessage_OneofUnmarshaler, _GossipMessage_OneofSizer, []interface{}{
		(*GossipMessage_AliveMsg)(nil),
		(*GossipMessage_MemReq)(nil),
		(*GossipMessage_MemRes)(nil),
		(*GossipMessage_DataMsg)(nil),
		(*GossipMessage_Hello)(nil),
		(*GossipMessage_DataDig)(nil),
		(*GossipMessage_DataReq)(nil),
		(*GossipMessage_DataUpdate)(nil),
		(*GossipMessage_AckMsg)(nil),
		(*GossipMessage_Empty)(nil),
		(*GossipMessage_Conn)(nil),
		(*GossipMessage_StateRequest)(nil),
		(*GossipMessage_StateResponse)(nil),
	}
}

func _GossipMessage_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*GossipMessage)
	// content
	switch x := m.Content.(type) {
	case *GossipMessage_AliveMsg:
		b.EncodeVarint(2<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.AliveMsg); err != nil {
			return err
		}
	case *GossipMessage_MemReq:
		b.EncodeVarint(3<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.MemReq); err != nil {
			return err
		}
	case *GossipMessage_MemRes:
		b.EncodeVarint(4<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.MemRes); err != nil {
			return err
		}
	case *GossipMessage_DataMsg:
		b.EncodeVarint(5<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.DataMsg); err != nil {
			return err
		}
	case *GossipMessage_Hello:
		b.EncodeVarint(6<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Hello); err != nil {
			return err
		}
	case *GossipMessage_DataDig:
		b.EncodeVarint(7<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.DataDig); err != nil {
			return err
		}
	case *GossipMessage_DataReq:
		b.EncodeVarint(8<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.DataReq); err != nil {
			return err
		}
	case *GossipMessage_DataUpdate:
		b.EncodeVarint(9<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.DataUpdate); err != nil {
			return err
		}
	case *GossipMessage_AckMsg:
		b.EncodeVarint(10<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.AckMsg); err != nil {
			return err
		}
	case *GossipMessage_Empty:
		b.EncodeVarint(11<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Empty); err != nil {
			return err
		}
	case *GossipMessage_Conn:
		b.EncodeVarint(12<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Conn); err != nil {
			return err
		}
	case *GossipMessage_StateRequest:
		b.EncodeVarint(14<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.StateRequest); err != nil {
			return err
		}
	case *GossipMessage_StateResponse:
		b.EncodeVarint(15<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.StateResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GossipMessage.Content has unexpected type %T", x)
	}
	return nil
}

func _GossipMessage_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*GossipMessage)
	switch tag {
	case 2: // content.aliveMsg
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(AliveMessage)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_AliveMsg{msg}
		return true, err
	case 3: // content.memReq
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(MembershipRequest)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_MemReq{msg}
		return true, err
	case 4: // content.memRes
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(MembershipResponse)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_MemRes{msg}
		return true, err
	case 5: // content.dataMsg
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(DataMessage)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_DataMsg{msg}
		return true, err
	case 6: // content.hello
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(GossipHello)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_Hello{msg}
		return true, err
	case 7: // content.dataDig
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(DataDigest)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_DataDig{msg}
		return true, err
	case 8: // content.dataReq
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(DataRequest)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_DataReq{msg}
		return true, err
	case 9: // content.dataUpdate
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(DataUpdate)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_DataUpdate{msg}
		return true, err
	case 10: // content.ackMsg
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(AckMessage)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_AckMsg{msg}
		return true, err
	case 11: // content.empty
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(Empty)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_Empty{msg}
		return true, err
	case 12: // content.conn
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(ConnEstablish)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_Conn{msg}
		return true, err
	case 14: // content.stateRequest
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(RemoteStateRequest)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_StateRequest{msg}
		return true, err
	case 15: // content.stateResponse
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(RemoteStateResponse)
		err := b.DecodeMessage(msg)
		m.Content = &GossipMessage_StateResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GossipMessage_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*GossipMessage)
	// content
	switch x := m.Content.(type) {
	case *GossipMessage_AliveMsg:
		s := proto1.Size(x.AliveMsg)
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_MemReq:
		s := proto1.Size(x.MemReq)
		n += proto1.SizeVarint(3<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_MemRes:
		s := proto1.Size(x.MemRes)
		n += proto1.SizeVarint(4<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_DataMsg:
		s := proto1.Size(x.DataMsg)
		n += proto1.SizeVarint(5<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_Hello:
		s := proto1.Size(x.Hello)
		n += proto1.SizeVarint(6<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_DataDig:
		s := proto1.Size(x.DataDig)
		n += proto1.SizeVarint(7<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_DataReq:
		s := proto1.Size(x.DataReq)
		n += proto1.SizeVarint(8<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_DataUpdate:
		s := proto1.Size(x.DataUpdate)
		n += proto1.SizeVarint(9<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_AckMsg:
		s := proto1.Size(x.AckMsg)
		n += proto1.SizeVarint(10<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_Empty:
		s := proto1.Size(x.Empty)
		n += proto1.SizeVarint(11<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_Conn:
		s := proto1.Size(x.Conn)
		n += proto1.SizeVarint(12<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_StateRequest:
		s := proto1.Size(x.StateRequest)
		n += proto1.SizeVarint(14<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *GossipMessage_StateResponse:
		s := proto1.Size(x.StateResponse)
		n += proto1.SizeVarint(15<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ConnEstablish struct {
	Sig   []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	PkiID []byte `protobuf:"bytes,2,opt,name=pkiID,proto3" json:"pkiID,omitempty"`
}

func (m *ConnEstablish) Reset()                    { *m = ConnEstablish{} }
func (m *ConnEstablish) String() string            { return proto1.CompactTextString(m) }
func (*ConnEstablish) ProtoMessage()               {}
func (*ConnEstablish) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type DataRequest struct {
	Nonce  uint64   `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
	SeqMap []uint64 `protobuf:"varint,2,rep,packed,name=seqMap" json:"seqMap,omitempty"`
}

func (m *DataRequest) Reset()                    { *m = DataRequest{} }
func (m *DataRequest) String() string            { return proto1.CompactTextString(m) }
func (*DataRequest) ProtoMessage()               {}
func (*DataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GossipHello struct {
	Nonce uint64 `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *GossipHello) Reset()                    { *m = GossipHello{} }
func (m *GossipHello) String() string            { return proto1.CompactTextString(m) }
func (*GossipHello) ProtoMessage()               {}
func (*GossipHello) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DataUpdate struct {
	Nonce uint64         `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
	Data  []*DataMessage `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (m *DataUpdate) Reset()                    { *m = DataUpdate{} }
func (m *DataUpdate) String() string            { return proto1.CompactTextString(m) }
func (*DataUpdate) ProtoMessage()               {}
func (*DataUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DataUpdate) GetData() []*DataMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

type DataDigest struct {
	Nonce  uint64   `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
	SeqMap []uint64 `protobuf:"varint,2,rep,packed,name=seqMap" json:"seqMap,omitempty"`
}

func (m *DataDigest) Reset()                    { *m = DataDigest{} }
func (m *DataDigest) String() string            { return proto1.CompactTextString(m) }
func (*DataDigest) ProtoMessage()               {}
func (*DataDigest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DataMessage struct {
	Type    DataMessage_Type `protobuf:"varint,1,opt,name=type,enum=proto.DataMessage_Type" json:"type,omitempty"`
	Payload *Payload         `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *DataMessage) Reset()                    { *m = DataMessage{} }
func (m *DataMessage) String() string            { return proto1.CompactTextString(m) }
func (*DataMessage) ProtoMessage()               {}
func (*DataMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DataMessage) GetPayload() *Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Payload struct {
	SeqNum uint64 `protobuf:"varint,1,opt,name=seqNum" json:"seqNum,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Payload) Reset()                    { *m = Payload{} }
func (m *Payload) String() string            { return proto1.CompactTextString(m) }
func (*Payload) ProtoMessage()               {}
func (*Payload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type AckMessage struct {
	Nonce uint64 `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *AckMessage) Reset()                    { *m = AckMessage{} }
func (m *AckMessage) String() string            { return proto1.CompactTextString(m) }
func (*AckMessage) ProtoMessage()               {}
func (*AckMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type AliveMessage struct {
	Membership *Member   `protobuf:"bytes,1,opt,name=membership" json:"membership,omitempty"`
	Timestamp  *PeerTime `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Signature  []byte    `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *AliveMessage) Reset()                    { *m = AliveMessage{} }
func (m *AliveMessage) String() string            { return proto1.CompactTextString(m) }
func (*AliveMessage) ProtoMessage()               {}
func (*AliveMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AliveMessage) GetMembership() *Member {
	if m != nil {
		return m.Membership
	}
	return nil
}

func (m *AliveMessage) GetTimestamp() *PeerTime {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type PeerTime struct {
	IncNumber uint64 `protobuf:"varint,1,opt,name=inc_number,json=incNumber" json:"inc_number,omitempty"`
	SeqNum    uint64 `protobuf:"varint,2,opt,name=seqNum" json:"seqNum,omitempty"`
}

func (m *PeerTime) Reset()                    { *m = PeerTime{} }
func (m *PeerTime) String() string            { return proto1.CompactTextString(m) }
func (*PeerTime) ProtoMessage()               {}
func (*PeerTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type MembershipRequest struct {
	SelfInformation *AliveMessage `protobuf:"bytes,1,opt,name=selfInformation" json:"selfInformation,omitempty"`
	Known           [][]byte      `protobuf:"bytes,2,rep,name=known,proto3" json:"known,omitempty"`
}

func (m *MembershipRequest) Reset()                    { *m = MembershipRequest{} }
func (m *MembershipRequest) String() string            { return proto1.CompactTextString(m) }
func (*MembershipRequest) ProtoMessage()               {}
func (*MembershipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MembershipRequest) GetSelfInformation() *AliveMessage {
	if m != nil {
		return m.SelfInformation
	}
	return nil
}

type MembershipResponse struct {
	Alive []*AliveMessage `protobuf:"bytes,1,rep,name=alive" json:"alive,omitempty"`
	Dead  []*AliveMessage `protobuf:"bytes,2,rep,name=dead" json:"dead,omitempty"`
}

func (m *MembershipResponse) Reset()                    { *m = MembershipResponse{} }
func (m *MembershipResponse) String() string            { return proto1.CompactTextString(m) }
func (*MembershipResponse) ProtoMessage()               {}
func (*MembershipResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *MembershipResponse) GetAlive() []*AliveMessage {
	if m != nil {
		return m.Alive
	}
	return nil
}

func (m *MembershipResponse) GetDead() []*AliveMessage {
	if m != nil {
		return m.Dead
	}
	return nil
}

type Member struct {
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Metadata []byte `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	PkiID    []byte `protobuf:"bytes,3,opt,name=pkiID,proto3" json:"pkiID,omitempty"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto1.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type RemoteStateRequest struct {
	SeqNums []uint64 `protobuf:"varint,1,rep,packed,name=seqNums" json:"seqNums,omitempty"`
}

func (m *RemoteStateRequest) Reset()                    { *m = RemoteStateRequest{} }
func (m *RemoteStateRequest) String() string            { return proto1.CompactTextString(m) }
func (*RemoteStateRequest) ProtoMessage()               {}
func (*RemoteStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type RemoteStateResponse struct {
	Payloads []*Payload `protobuf:"bytes,1,rep,name=payloads" json:"payloads,omitempty"`
}

func (m *RemoteStateResponse) Reset()                    { *m = RemoteStateResponse{} }
func (m *RemoteStateResponse) String() string            { return proto1.CompactTextString(m) }
func (*RemoteStateResponse) ProtoMessage()               {}
func (*RemoteStateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RemoteStateResponse) GetPayloads() []*Payload {
	if m != nil {
		return m.Payloads
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func init() {
	proto1.RegisterType((*GossipMessage)(nil), "proto.GossipMessage")
	proto1.RegisterType((*ConnEstablish)(nil), "proto.ConnEstablish")
	proto1.RegisterType((*DataRequest)(nil), "proto.DataRequest")
	proto1.RegisterType((*GossipHello)(nil), "proto.GossipHello")
	proto1.RegisterType((*DataUpdate)(nil), "proto.DataUpdate")
	proto1.RegisterType((*DataDigest)(nil), "proto.DataDigest")
	proto1.RegisterType((*DataMessage)(nil), "proto.DataMessage")
	proto1.RegisterType((*Payload)(nil), "proto.Payload")
	proto1.RegisterType((*AckMessage)(nil), "proto.AckMessage")
	proto1.RegisterType((*AliveMessage)(nil), "proto.AliveMessage")
	proto1.RegisterType((*PeerTime)(nil), "proto.PeerTime")
	proto1.RegisterType((*MembershipRequest)(nil), "proto.MembershipRequest")
	proto1.RegisterType((*MembershipResponse)(nil), "proto.MembershipResponse")
	proto1.RegisterType((*Member)(nil), "proto.Member")
	proto1.RegisterType((*RemoteStateRequest)(nil), "proto.RemoteStateRequest")
	proto1.RegisterType((*RemoteStateResponse)(nil), "proto.RemoteStateResponse")
	proto1.RegisterType((*Empty)(nil), "proto.Empty")
	proto1.RegisterEnum("proto.DataMessage_Type", DataMessage_Type_name, DataMessage_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Gossip service

type GossipClient interface {
	GossipStream(ctx context.Context, opts ...grpc.CallOption) (Gossip_GossipStreamClient, error)
	Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type gossipClient struct {
	cc *grpc.ClientConn
}

func NewGossipClient(cc *grpc.ClientConn) GossipClient {
	return &gossipClient{cc}
}

func (c *gossipClient) GossipStream(ctx context.Context, opts ...grpc.CallOption) (Gossip_GossipStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Gossip_serviceDesc.Streams[0], c.cc, "/proto.Gossip/GossipStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gossipGossipStreamClient{stream}
	return x, nil
}

type Gossip_GossipStreamClient interface {
	Send(*GossipMessage) error
	Recv() (*GossipMessage, error)
	grpc.ClientStream
}

type gossipGossipStreamClient struct {
	grpc.ClientStream
}

func (x *gossipGossipStreamClient) Send(m *GossipMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gossipGossipStreamClient) Recv() (*GossipMessage, error) {
	m := new(GossipMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gossipClient) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.Gossip/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Gossip service

type GossipServer interface {
	GossipStream(Gossip_GossipStreamServer) error
	Ping(context.Context, *Empty) (*Empty, error)
}

func RegisterGossipServer(s *grpc.Server, srv GossipServer) {
	s.RegisterService(&_Gossip_serviceDesc, srv)
}

func _Gossip_GossipStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GossipServer).GossipStream(&gossipGossipStreamServer{stream})
}

type Gossip_GossipStreamServer interface {
	Send(*GossipMessage) error
	Recv() (*GossipMessage, error)
	grpc.ServerStream
}

type gossipGossipStreamServer struct {
	grpc.ServerStream
}

func (x *gossipGossipStreamServer) Send(m *GossipMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gossipGossipStreamServer) Recv() (*GossipMessage, error) {
	m := new(GossipMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Gossip_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gossip/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).Ping(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gossip_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Gossip",
	HandlerType: (*GossipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Gossip_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GossipStream",
			Handler:       _Gossip_GossipStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0x5f, 0x6f, 0xe3, 0x44,
	0x10, 0x4f, 0x1a, 0xe7, 0xdf, 0x24, 0x69, 0x73, 0x73, 0x15, 0x98, 0x0a, 0xa4, 0xca, 0x9c, 0x20,
	0xf4, 0x68, 0x0a, 0xe9, 0x03, 0x12, 0x08, 0x41, 0xda, 0x04, 0x52, 0xb8, 0x96, 0x63, 0xdb, 0xbb,
	0x07, 0x5e, 0x4e, 0x9b, 0x64, 0x6b, 0xaf, 0x1a, 0xaf, 0x5d, 0xef, 0x06, 0x94, 0xaf, 0xc0, 0x47,
	0xe1, 0x53, 0xf0, 0xd1, 0x90, 0x77, 0xd7, 0x89, 0x7d, 0x49, 0x1f, 0x78, 0xf2, 0xce, 0xcc, 0xef,
	0x37, 0x3b, 0xff, 0x76, 0x0c, 0x9d, 0x90, 0x49, 0x49, 0x7d, 0xd6, 0x8f, 0x93, 0x48, 0x45, 0x58,
	0xd5, 0x1f, 0xef, 0xdf, 0x2a, 0x74, 0x7e, 0x8e, 0xa4, 0xe4, 0xf1, 0xb5, 0x31, 0xe3, 0x21, 0x54,
	0x45, 0x24, 0x66, 0xcc, 0x2d, 0x1f, 0x97, 0x7b, 0x0e, 0x31, 0x02, 0x7e, 0x0d, 0x0d, 0xba, 0xe0,
	0x7f, 0xb2, 0x6b, 0xe9, 0xbb, 0x7b, 0xc7, 0xe5, 0x5e, 0x6b, 0xf0, 0xdc, 0x38, 0xea, 0x0f, 0xb5,
	0xda, 0x90, 0x27, 0x25, 0xb2, 0x86, 0xe1, 0x00, 0x6a, 0x21, 0x0b, 0x09, 0x7b, 0x74, 0x2b, 0x9a,
	0xe0, 0x5a, 0xc2, 0x35, 0x0b, 0xa7, 0x2c, 0x91, 0x01, 0x8f, 0x09, 0x7b, 0x5c, 0x32, 0xa9, 0x26,
	0x25, 0x62, 0x91, 0x78, 0x6e, 0x39, 0xd2, 0x75, 0x34, 0xe7, 0xa3, 0x1d, 0x1c, 0x19, 0x47, 0x42,
	0xb2, 0x35, 0x49, 0x62, 0x1f, 0xea, 0x73, 0xaa, 0x68, 0x1a, 0x5a, 0x55, 0xb3, 0xd0, 0xb2, 0x46,
	0xa9, 0x76, 0x1d, 0x59, 0x06, 0xc2, 0x13, 0xa8, 0x06, 0x6c, 0xb1, 0x88, 0xdc, 0x5a, 0x01, 0x6d,
	0xca, 0x30, 0x49, 0x2d, 0x93, 0x12, 0x31, 0x10, 0x3c, 0x35, 0xbe, 0x47, 0xdc, 0x77, 0xeb, 0x1a,
	0xfd, 0x2c, 0xe7, 0x7b, 0xc4, 0x7d, 0x13, 0x7e, 0x86, 0xc9, 0x42, 0x49, 0x93, 0x6e, 0x6c, 0x85,
	0xb2, 0x49, 0x37, 0x03, 0xe1, 0x39, 0x40, 0x7a, 0x7c, 0x13, 0xcf, 0xa9, 0x62, 0x6e, 0x73, 0xeb,
	0x06, 0x63, 0x98, 0x94, 0x48, 0x0e, 0x86, 0x2f, 0xa1, 0x46, 0x67, 0x0f, 0x69, 0xba, 0x50, 0x20,
	0x0c, 0x67, 0x0f, 0x9b, 0x6c, 0x2d, 0x04, 0x5f, 0x40, 0x95, 0x85, 0xb1, 0x5a, 0xb9, 0x2d, 0x8d,
	0x6d, 0x5b, 0xec, 0x38, 0xd5, 0xa5, 0x69, 0x6a, 0x23, 0x9e, 0x80, 0x33, 0x8b, 0x84, 0x70, 0xdb,
	0x1a, 0x74, 0x68, 0x41, 0x97, 0x91, 0x10, 0x63, 0xa9, 0xe8, 0x74, 0xc1, 0x65, 0x30, 0x29, 0x11,
	0x8d, 0xc1, 0x1f, 0xa0, 0x2d, 0x15, 0x55, 0xcc, 0xa6, 0xe3, 0xee, 0x17, 0x3a, 0x45, 0x58, 0x18,
	0x29, 0x76, 0x9b, 0x03, 0x4c, 0x4a, 0xa4, 0x40, 0xc0, 0x0b, 0xe8, 0x58, 0xd9, 0xb4, 0xd2, 0x3d,
	0xd0, 0x1e, 0x8e, 0x76, 0x79, 0x58, 0x37, 0xbb, 0x48, 0xb9, 0x68, 0x42, 0x7d, 0x16, 0x09, 0xc5,
	0x84, 0xf2, 0xbe, 0x81, 0x4e, 0x21, 0x50, 0xec, 0x42, 0x45, 0x72, 0x5f, 0xcf, 0x6f, 0x9b, 0xa4,
	0xc7, 0x74, 0xa6, 0xe3, 0x07, 0x7e, 0x35, 0xd2, 0xa3, 0xdb, 0x26, 0x46, 0xf0, 0xbe, 0x83, 0x56,
	0xae, 0x2d, 0x4f, 0x0c, 0xfe, 0x07, 0x50, 0x93, 0xec, 0xf1, 0x9a, 0xc6, 0xee, 0xde, 0x71, 0xa5,
	0xe7, 0x10, 0x2b, 0x79, 0x9f, 0x42, 0x2b, 0x37, 0x30, 0xbb, 0xc9, 0xde, 0x2f, 0x00, 0x9b, 0x2e,
	0x3e, 0x71, 0xc1, 0x67, 0xe0, 0xa4, 0xbd, 0xd5, 0xee, 0x77, 0x8e, 0x2e, 0xd1, 0x76, 0xef, 0x5b,
	0xe3, 0xcb, 0xcc, 0xdc, 0xff, 0x0c, 0xf6, 0x9f, 0xb2, 0x49, 0x35, 0x7b, 0xe3, 0x2f, 0xc1, 0x51,
	0xab, 0xd8, 0x90, 0xf7, 0x07, 0x1f, 0x6e, 0xdf, 0xd9, 0xbf, 0x5b, 0xc5, 0x8c, 0x68, 0x10, 0xf6,
	0xa0, 0x1e, 0xd3, 0xd5, 0x22, 0xa2, 0x73, 0xfb, 0xf2, 0xf7, 0x2d, 0xfe, 0xb5, 0xd1, 0x92, 0xcc,
	0xec, 0x8d, 0xc0, 0x49, 0x79, 0xd8, 0x81, 0xe6, 0x9b, 0x9b, 0xd1, 0xf8, 0xa7, 0xab, 0x9b, 0xf1,
	0xa8, 0x5b, 0xc2, 0x26, 0x54, 0x2f, 0x5e, 0xfd, 0x76, 0xf9, 0x6b, 0xb7, 0x8c, 0x2d, 0xa8, 0xbf,
	0x1d, 0xbe, 0x7a, 0x47, 0xc6, 0xbf, 0x77, 0xf7, 0x36, 0xc2, 0x6d, 0xb7, 0x82, 0x0d, 0x70, 0x2e,
	0xc7, 0xe4, 0xae, 0xeb, 0x78, 0x57, 0x50, 0xb7, 0x9e, 0x6d, 0x3e, 0x37, 0xcb, 0xd0, 0xa6, 0x69,
	0x25, 0x44, 0x70, 0x02, 0x2a, 0x03, 0x1d, 0x4f, 0x93, 0xe8, 0x73, 0xaa, 0xd3, 0x75, 0xac, 0xe8,
	0x16, 0x9b, 0x9a, 0x79, 0x00, 0x9b, 0x47, 0xf1, 0x44, 0x8f, 0xfe, 0x2e, 0x43, 0x3b, 0xbf, 0xc3,
	0xf0, 0x14, 0x20, 0x5c, 0xaf, 0x1b, 0x8d, 0x6d, 0x0d, 0x3a, 0x85, 0x3d, 0x44, 0x72, 0x00, 0x3c,
	0x85, 0xa6, 0xe2, 0x21, 0x93, 0x8a, 0x86, 0xb1, 0x2d, 0xd0, 0x41, 0x56, 0x20, 0xc6, 0x92, 0x3b,
	0x1e, 0x32, 0xb2, 0x41, 0xe0, 0xc7, 0xd0, 0x94, 0xdc, 0x17, 0x54, 0x2d, 0x13, 0x66, 0x63, 0xdd,
	0x28, 0xbc, 0x21, 0x34, 0x32, 0x12, 0x7e, 0x02, 0xc0, 0xc5, 0xec, 0x9d, 0x58, 0xa6, 0x57, 0xd9,
	0x98, 0x9b, 0x5c, 0xcc, 0x6e, 0xb4, 0x22, 0x57, 0x9b, 0xbd, 0x7c, 0x6d, 0xbc, 0x00, 0x9e, 0x6d,
	0x6d, 0x58, 0xfc, 0x1e, 0x0e, 0x24, 0x5b, 0xdc, 0x5f, 0x89, 0xfb, 0x28, 0x09, 0xa9, 0xe2, 0x91,
	0xb0, 0x89, 0xed, 0xda, 0xe2, 0xe4, 0x7d, 0x6c, 0x5a, 0xb9, 0x07, 0x11, 0xfd, 0x25, 0xf4, 0x58,
	0xb5, 0x89, 0x11, 0xbc, 0x00, 0x70, 0x7b, 0x2f, 0xe3, 0x17, 0x50, 0xd5, 0xbf, 0x00, 0xb7, 0xac,
	0x07, 0x7a, 0xe7, 0x05, 0x06, 0x81, 0x9f, 0x83, 0x33, 0x67, 0x7a, 0xac, 0x9e, 0x44, 0x6a, 0x80,
	0xf7, 0x16, 0x6a, 0xe6, 0x26, 0x3c, 0x82, 0x06, 0x13, 0xf3, 0x38, 0xe2, 0x42, 0xe9, 0x0c, 0x9a,
	0x64, 0x2d, 0xa7, 0xb6, 0x90, 0x29, 0x6a, 0x5f, 0x53, 0x5a, 0xd9, 0xb5, 0xbc, 0xd9, 0x00, 0x95,
	0xfc, 0x06, 0xe8, 0x03, 0x6e, 0xef, 0x2b, 0x74, 0xa1, 0x6e, 0x6a, 0x29, 0x75, 0x0e, 0x0e, 0xc9,
	0x44, 0x6f, 0x08, 0xcf, 0x77, 0x6c, 0x27, 0x3c, 0x81, 0x86, 0x7d, 0x02, 0xd2, 0x66, 0xfd, 0xfe,
	0x13, 0x59, 0xdb, 0xbd, 0x3a, 0x54, 0xf5, 0xee, 0x1d, 0xc4, 0x50, 0x33, 0x0b, 0x04, 0x7f, 0x84,
	0xb6, 0x39, 0xdd, 0xaa, 0x84, 0xd1, 0x10, 0x0f, 0x0b, 0x3f, 0x24, 0x5b, 0x89, 0xa3, 0x9d, 0x5a,
	0xaf, 0xd4, 0x2b, 0x7f, 0x55, 0xc6, 0x17, 0xe0, 0xbc, 0xe6, 0xc2, 0xc7, 0xc2, 0x76, 0x3f, 0x2a,
	0x48, 0x5e, 0xe9, 0xe2, 0xcb, 0x3f, 0x4e, 0x7c, 0xae, 0x82, 0xe5, 0xb4, 0x3f, 0x8b, 0xc2, 0xb3,
	0x60, 0x15, 0xb3, 0x64, 0xc1, 0xe6, 0x3e, 0x4b, 0xce, 0xee, 0xe9, 0x34, 0xe1, 0xb3, 0x33, 0x5f,
	0xbb, 0x3e, 0xd3, 0xac, 0x69, 0x4d, 0x7f, 0xce, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x29, 0x47,
	0x99, 0xdf, 0x38, 0x08, 0x00, 0x00,
}
