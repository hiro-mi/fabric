/*
Copyright IBM Corp. 2016 All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package protos;

import "fabric_transaction_header.proto";

// This structure is necessary to sign over the proposal which contains
// the header and the payload. Without this structure, we would have to
// concatenate the header and the payload to verify the signature, which
// could be expensive with large payload
message SignedProposal {
	// The bytes of Proposal
	// Allow ProposalResponse to easily hash over the bytes
	bytes proposalBytes = 1;

	// Signaure over proposalBytes
	bytes signature = 2;
}

// A Proposal is sent to an endorser for endorsement.
// The proposal contains:
// 1. A header which has fields common to all proposals and specifies
// a type field for customization
// 2. A payload whose type depends on the header's type field.
message Proposal {

	// The header of the proposal
	TransactionHeader header = 1;

	// The payload of the proposal as defined by the type in the proposal
	// header. For chaincode, it's bytes of ChaincodeProposalPayload
	bytes payload = 2;
}