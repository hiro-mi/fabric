// Code generated by protoc-gen-go.
// source: peer/devops.proto
// DO NOT EDIT!

package peer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Devops service

type DevopsClient interface {
	// Build the chaincode package.
	Build(ctx context.Context, in *ChaincodeSpec, opts ...grpc.CallOption) (*ChaincodeDeploymentSpec, error)
}

type devopsClient struct {
	cc *grpc.ClientConn
}

func NewDevopsClient(cc *grpc.ClientConn) DevopsClient {
	return &devopsClient{cc}
}

func (c *devopsClient) Build(ctx context.Context, in *ChaincodeSpec, opts ...grpc.CallOption) (*ChaincodeDeploymentSpec, error) {
	out := new(ChaincodeDeploymentSpec)
	err := grpc.Invoke(ctx, "/protos.Devops/Build", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Devops service

type DevopsServer interface {
	// Build the chaincode package.
	Build(context.Context, *ChaincodeSpec) (*ChaincodeDeploymentSpec, error)
}

func RegisterDevopsServer(s *grpc.Server, srv DevopsServer) {
	s.RegisterService(&_Devops_serviceDesc, srv)
}

func _Devops_Build_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChaincodeSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevopsServer).Build(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Devops/Build",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevopsServer).Build(ctx, req.(*ChaincodeSpec))
	}
	return interceptor(ctx, in, info, handler)
}

var _Devops_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Devops",
	HandlerType: (*DevopsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Build",
			Handler:    _Devops_Build_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor4,
}

func init() { proto.RegisterFile("peer/devops.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x48, 0x4d, 0x2d,
	0xd2, 0x4f, 0x49, 0x2d, 0xcb, 0x2f, 0x28, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03,
	0x53, 0xc5, 0x52, 0x22, 0x60, 0xa9, 0xe4, 0x8c, 0xc4, 0xcc, 0xbc, 0xe4, 0xfc, 0x94, 0x54, 0x88,
	0xac, 0x91, 0x37, 0x17, 0x9b, 0x0b, 0x58, 0xb5, 0x90, 0x23, 0x17, 0xab, 0x53, 0x69, 0x66, 0x4e,
	0x8a, 0x90, 0x28, 0x44, 0xaa, 0x58, 0xcf, 0x19, 0xa6, 0x36, 0xb8, 0x20, 0x35, 0x59, 0x4a, 0x1e,
	0x43, 0xd8, 0x25, 0xb5, 0x20, 0x27, 0xbf, 0x32, 0x37, 0x35, 0xaf, 0x04, 0xa4, 0x40, 0x89, 0xc1,
	0x49, 0x3b, 0x4a, 0x33, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x3f, 0xa3,
	0xb2, 0x20, 0xb5, 0x28, 0x27, 0x35, 0x25, 0x3d, 0xb5, 0x48, 0x3f, 0x2d, 0x31, 0xa9, 0x28, 0x33,
	0x59, 0x1f, 0x62, 0x82, 0x3e, 0xc8, 0x25, 0x49, 0x10, 0x77, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x76, 0x4c, 0x7b, 0xdf, 0xb3, 0x00, 0x00, 0x00,
}
